{"ast":null,"code":"/**\n * Created by Samuel on 6/4/2016.\n * Simple wrapper functions to produce shorter UUIDs for cookies, maybe everything?\n */\n\nvar anyBase = require('any-base');\nvar uuidV4 = require('uuid/v4');\nvar flickrBase58 = '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ';\nvar cookieBase90 = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&'()*+-./:<=>?@[]^_`{|}~\";\nvar toFlickr;\n\n/**\n * Takes a UUID, strips the dashes, and translates.\n * @param {string} longId\n * @param {function(string)} translator\n * @returns {string}\n */\nfunction shortenUUID(longId, translator) {\n  return translator(longId.toLowerCase().replace(/-/g, ''));\n}\n\n/**\n * Translate back to hex and turn back into UUID format, with dashes\n * @param {string} shortId\n * @param {function(string)} translator\n * @returns {string}\n */\nfunction enlargeUUID(shortId, translator) {\n  var uu1 = translator(shortId);\n  var leftPad = \"\";\n  var m;\n\n  // Pad out UUIDs beginning with zeros (any number shorter than 32 characters of hex)\n  for (var i = 0, len = 32 - uu1.length; i < len; ++i) {\n    leftPad += \"0\";\n  }\n\n  // Join the zero padding and the UUID and then slice it up with match\n  m = (leftPad + uu1).match(/(\\w{8})(\\w{4})(\\w{4})(\\w{4})(\\w{12})/);\n\n  // Accumulate the matches and join them.\n  return [m[1], m[2], m[3], m[4], m[5]].join('-');\n}\nmodule.exports = function () {\n  /**\n   * @constructor\n   * @param {string?} toAlphabet - Defaults to flickrBase58 if not provided\n   * @returns {{new: (function()),\n   *  uuid: (function()),\n   *  fromUUID: (function(string)),\n   *  toUUID: (function(string)),\n   *  alphabet: (string)}}\n   */\n  function MakeConvertor(toAlphabet) {\n    // Default to Flickr 58\n    var useAlphabet = toAlphabet || flickrBase58;\n\n    // UUIDs are in hex, so we translate to and from.\n    var fromHex = anyBase(anyBase.HEX, useAlphabet);\n    var toHex = anyBase(useAlphabet, anyBase.HEX);\n    var generate = function () {\n      return shortenUUID(uuidV4(), fromHex);\n    };\n    return {\n      new: generate,\n      generate: generate,\n      uuid: uuidV4,\n      fromUUID: function (uuid) {\n        return shortenUUID(uuid, fromHex);\n      },\n      toUUID: function (shortUuid) {\n        return enlargeUUID(shortUuid, toHex);\n      },\n      alphabet: useAlphabet\n    };\n  }\n\n  // Expose the constants for other purposes.\n  MakeConvertor.constants = {\n    flickrBase58: flickrBase58,\n    cookieBase90: cookieBase90\n  };\n\n  // Expose the generic v4 UUID generator for convenience\n  MakeConvertor.uuid = uuidV4;\n\n  // Provide a generic generator\n  MakeConvertor.generate = function () {\n    if (!toFlickr) {\n      // Generate on first use;\n      toFlickr = anyBase(anyBase.HEX, flickrBase58);\n    }\n    return shortenUUID(uuidV4(), toFlickr);\n  };\n  return MakeConvertor;\n}();","map":{"version":3,"names":["anyBase","require","uuidV4","flickrBase58","cookieBase90","toFlickr","shortenUUID","longId","translator","toLowerCase","replace","enlargeUUID","shortId","uu1","leftPad","m","i","len","length","match","join","module","exports","MakeConvertor","toAlphabet","useAlphabet","fromHex","HEX","toHex","generate","new","uuid","fromUUID","toUUID","shortUuid","alphabet","constants"],"sources":["/Users/shravan/Documents/Projects/feb hacks/setup/frontend/node_modules/short-uuid/index.js"],"sourcesContent":["/**\n * Created by Samuel on 6/4/2016.\n * Simple wrapper functions to produce shorter UUIDs for cookies, maybe everything?\n */\n\nvar anyBase = require('any-base');\nvar uuidV4 = require('uuid/v4');\n\nvar flickrBase58 = '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ';\nvar cookieBase90 = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&'()*+-./:<=>?@[]^_`{|}~\";\n\nvar toFlickr;\n\n/**\n * Takes a UUID, strips the dashes, and translates.\n * @param {string} longId\n * @param {function(string)} translator\n * @returns {string}\n */\nfunction shortenUUID (longId, translator) {\n    return translator(longId.toLowerCase().replace(/-/g,''));\n}\n\n/**\n * Translate back to hex and turn back into UUID format, with dashes\n * @param {string} shortId\n * @param {function(string)} translator\n * @returns {string}\n */\nfunction enlargeUUID(shortId, translator) {\n    var uu1 = translator(shortId);\n    var leftPad = \"\";\n    var m;\n\n    // Pad out UUIDs beginning with zeros (any number shorter than 32 characters of hex)\n    for (var i = 0, len = 32-uu1.length; i < len; ++i) {\n        leftPad += \"0\";\n    }\n\n    // Join the zero padding and the UUID and then slice it up with match\n    m = (leftPad + uu1).match(/(\\w{8})(\\w{4})(\\w{4})(\\w{4})(\\w{12})/);\n\n    // Accumulate the matches and join them.\n    return [m[1], m[2], m[3], m[4], m[5]].join('-');\n}\n\nmodule.exports = (function(){\n\n    /**\n     * @constructor\n     * @param {string?} toAlphabet - Defaults to flickrBase58 if not provided\n     * @returns {{new: (function()),\n     *  uuid: (function()),\n     *  fromUUID: (function(string)),\n     *  toUUID: (function(string)),\n     *  alphabet: (string)}}\n     */\n    function MakeConvertor(toAlphabet) {\n\n        // Default to Flickr 58\n        var useAlphabet = toAlphabet || flickrBase58;\n\n        // UUIDs are in hex, so we translate to and from.\n        var fromHex = anyBase(anyBase.HEX, useAlphabet);\n        var toHex = anyBase(useAlphabet, anyBase.HEX);\n        var generate = function() { return shortenUUID(uuidV4(), fromHex); };\n\n        return {\n            new: generate,\n            generate: generate,\n            uuid: uuidV4,\n            fromUUID: function(uuid) { return shortenUUID(uuid, fromHex); },\n            toUUID: function(shortUuid) { return enlargeUUID(shortUuid, toHex); },\n            alphabet: useAlphabet\n        };\n    }\n\n    // Expose the constants for other purposes.\n    MakeConvertor.constants = {\n        flickrBase58: flickrBase58,\n        cookieBase90: cookieBase90\n    };\n\n    // Expose the generic v4 UUID generator for convenience\n    MakeConvertor.uuid = uuidV4;\n\n    // Provide a generic generator\n    MakeConvertor.generate = function() {\n        if (!toFlickr) {\n            // Generate on first use;\n            toFlickr = anyBase(anyBase.HEX, flickrBase58);\n        }\n        return shortenUUID(uuidV4(), toFlickr);\n    };\n\n    return MakeConvertor;\n}());\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AACjC,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAS,CAAC;AAE/B,IAAIE,YAAY,GAAG,4DAA4D;AAC/E,IAAIC,YAAY,GAAG,4FAA4F;AAE/G,IAAIC,QAAQ;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAW,CAAEC,MAAM,EAAEC,UAAU,EAAE;EACtC,OAAOA,UAAU,CAACD,MAAM,CAACE,WAAW,EAAE,CAACC,OAAO,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAW,CAACC,OAAO,EAAEJ,UAAU,EAAE;EACtC,IAAIK,GAAG,GAAGL,UAAU,CAACI,OAAO,CAAC;EAC7B,IAAIE,OAAO,GAAG,EAAE;EAChB,IAAIC,CAAC;;EAEL;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,EAAE,GAACJ,GAAG,CAACK,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;IAC/CF,OAAO,IAAI,GAAG;EAClB;;EAEA;EACAC,CAAC,GAAG,CAACD,OAAO,GAAGD,GAAG,EAAEM,KAAK,CAAC,sCAAsC,CAAC;;EAEjE;EACA,OAAO,CAACJ,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;AACnD;AAEAC,MAAM,CAACC,OAAO,GAAI,YAAU;EAExB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASC,aAAa,CAACC,UAAU,EAAE;IAE/B;IACA,IAAIC,WAAW,GAAGD,UAAU,IAAIrB,YAAY;;IAE5C;IACA,IAAIuB,OAAO,GAAG1B,OAAO,CAACA,OAAO,CAAC2B,GAAG,EAAEF,WAAW,CAAC;IAC/C,IAAIG,KAAK,GAAG5B,OAAO,CAACyB,WAAW,EAAEzB,OAAO,CAAC2B,GAAG,CAAC;IAC7C,IAAIE,QAAQ,GAAG,YAAW;MAAE,OAAOvB,WAAW,CAACJ,MAAM,EAAE,EAAEwB,OAAO,CAAC;IAAE,CAAC;IAEpE,OAAO;MACHI,GAAG,EAAED,QAAQ;MACbA,QAAQ,EAAEA,QAAQ;MAClBE,IAAI,EAAE7B,MAAM;MACZ8B,QAAQ,EAAE,UAASD,IAAI,EAAE;QAAE,OAAOzB,WAAW,CAACyB,IAAI,EAAEL,OAAO,CAAC;MAAE,CAAC;MAC/DO,MAAM,EAAE,UAASC,SAAS,EAAE;QAAE,OAAOvB,WAAW,CAACuB,SAAS,EAAEN,KAAK,CAAC;MAAE,CAAC;MACrEO,QAAQ,EAAEV;IACd,CAAC;EACL;;EAEA;EACAF,aAAa,CAACa,SAAS,GAAG;IACtBjC,YAAY,EAAEA,YAAY;IAC1BC,YAAY,EAAEA;EAClB,CAAC;;EAED;EACAmB,aAAa,CAACQ,IAAI,GAAG7B,MAAM;;EAE3B;EACAqB,aAAa,CAACM,QAAQ,GAAG,YAAW;IAChC,IAAI,CAACxB,QAAQ,EAAE;MACX;MACAA,QAAQ,GAAGL,OAAO,CAACA,OAAO,CAAC2B,GAAG,EAAExB,YAAY,CAAC;IACjD;IACA,OAAOG,WAAW,CAACJ,MAAM,EAAE,EAAEG,QAAQ,CAAC;EAC1C,CAAC;EAED,OAAOkB,aAAa;AACxB,CAAC,EAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}