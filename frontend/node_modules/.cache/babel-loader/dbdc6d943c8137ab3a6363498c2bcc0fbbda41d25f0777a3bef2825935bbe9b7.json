{"ast":null,"code":"var _jsxFileName = \"/Users/shravan/Documents/Projects/feb hacks/setup/frontend/src/pages/post/Uploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport S3 from 'react-aws-s3';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.Buffer = window.Buffer || require(\"buffer\").Buffer;\n\n// a React functional component, used to create a simple upload input and button\n\nconst Uploader = _ref => {\n  _s();\n  let {\n    setimagePreSignedUrl\n  } = _ref;\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  // the configuration information is fetched from the .env file\n  const config = {\n    bucketName: process.env.REACT_APP_BUCKET_NAME,\n    region: process.env.REACT_APP_REGION,\n    accessKeyId: process.env.REACT_APP_ACCESS,\n    secretAccessKey: process.env.REACT_APP_SECRET\n  };\n  const handleFileInput = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const uploadFile = async file => {\n    const ReactS3Client = new S3(config);\n    // the name of the file uploaded is used to upload it to S3\n    ReactS3Client.uploadFile(file, file.name).then(data => {\n      console.log(data.location, \"hi\");\n      setimagePreSignedUrl(data.location);\n      toast.success('File Uploaded Sucessfully');\n    }).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => uploadFile(selectedFile),\n      children: \" Upload file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n_s(Uploader, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = Uploader;\nexport default Uploader;\nvar _c;\n$RefreshReg$(_c, \"Uploader\");","map":{"version":3,"names":["React","useState","S3","toast","Toaster","window","Buffer","require","Uploader","setimagePreSignedUrl","selectedFile","setSelectedFile","config","bucketName","process","env","REACT_APP_BUCKET_NAME","region","REACT_APP_REGION","accessKeyId","REACT_APP_ACCESS","secretAccessKey","REACT_APP_SECRET","handleFileInput","e","target","files","uploadFile","file","ReactS3Client","name","then","data","console","log","location","success","catch","err","error"],"sources":["/Users/shravan/Documents/Projects/feb hacks/setup/frontend/src/pages/post/Uploader.js"],"sourcesContent":["import React , {useState} from 'react';\nimport S3 from 'react-aws-s3';\nimport toast, { Toaster } from 'react-hot-toast';\n\nwindow.Buffer = window.Buffer || require(\"buffer\").Buffer;\n\n// a React functional component, used to create a simple upload input and button\n\nconst Uploader = ({setimagePreSignedUrl}) => {\n\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    // the configuration information is fetched from the .env file\n    const config = {\n        bucketName: process.env.REACT_APP_BUCKET_NAME,\n        region: process.env.REACT_APP_REGION,\n        accessKeyId: process.env.REACT_APP_ACCESS,\n        secretAccessKey: process.env.REACT_APP_SECRET,\n    }\n\n    const handleFileInput = (e) => {\n        setSelectedFile(e.target.files[0]);\n    }\n\n    const uploadFile = async (file) => {\n        const ReactS3Client = new S3(config);\n        // the name of the file uploaded is used to upload it to S3\n        ReactS3Client\n        .uploadFile(file, file.name)\n        .then(data => {console.log(data.location, \"hi\");setimagePreSignedUrl(data.location);  toast.success('File Uploaded Sucessfully');})\n        .catch(err => console.error(err))\n    }\n    return <div>\n         <Toaster /> \n        <input type=\"file\" onChange={handleFileInput}/>\n        <br></br>\n        <button onClick={() => uploadFile(selectedFile)}> Upload file</button>\n    </div>\n}\n\nexport default Uploader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAOC,EAAE,MAAM,cAAc;AAC7B,OAAOC,KAAK,IAAIC,OAAO,QAAQ,iBAAiB;AAAC;AAEjDC,MAAM,CAACC,MAAM,GAAGD,MAAM,CAACC,MAAM,IAAIC,OAAO,CAAC,QAAQ,CAAC,CAACD,MAAM;;AAEzD;;AAEA,MAAME,QAAQ,GAAG,QAA4B;EAAA;EAAA,IAA3B;IAACC;EAAoB,CAAC;EAEpC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMW,MAAM,GAAG;IACXC,UAAU,EAAEC,OAAO,CAACC,GAAG,CAACC,qBAAqB;IAC7CC,MAAM,EAAEH,OAAO,CAACC,GAAG,CAACG,gBAAgB;IACpCC,WAAW,EAAEL,OAAO,CAACC,GAAG,CAACK,gBAAgB;IACzCC,eAAe,EAAEP,OAAO,CAACC,GAAG,CAACO;EACjC,CAAC;EAED,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC3Bb,eAAe,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;IAC/B,MAAMC,aAAa,GAAG,IAAI3B,EAAE,CAACU,MAAM,CAAC;IACpC;IACAiB,aAAa,CACZF,UAAU,CAACC,IAAI,EAAEA,IAAI,CAACE,IAAI,CAAC,CAC3BC,IAAI,CAACC,IAAI,IAAI;MAACC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,QAAQ,EAAE,IAAI,CAAC;MAAC1B,oBAAoB,CAACuB,IAAI,CAACG,QAAQ,CAAC;MAAGhC,KAAK,CAACiC,OAAO,CAAC,2BAA2B,CAAC;IAAC,CAAC,CAAC,CAClIC,KAAK,CAACC,GAAG,IAAIL,OAAO,CAACM,KAAK,CAACD,GAAG,CAAC,CAAC;EACrC,CAAC;EACD,oBAAO;IAAA,wBACF,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACZ;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEf;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAE,eAC/C;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,OAAO,EAAE,MAAMI,UAAU,CAACjB,YAAY,CAAE;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACpE;AACV,CAAC;AAAA,GA9BKF,QAAQ;AAAA,KAARA,QAAQ;AAgCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}